*qfunleashed.txt*   Asynchronous filling of the (location)quickfix list.

Author: lmenou
License: Apache 2.0 (See LICENSE file for details)

                                *qfunleashed* - *qfunleashed.nvim*

This is a minimal and simple plugin written in lua rending possible an
asynchronous |:make| and |:grep| in neovim. With this plugin, let us hope you
will enjoy linting and building your project/code without freezing your
favourite editor.

The plugin propose also a way to use "find" commands to fill the quickfix list.

1. Usage - Commands                             |qfunleashed-commands|
2. Configuration                                |qfunleashed-configuration|
3. About the plugin                             |qfunleashed-about|

Requirement: Neovim 0.5

============================================================================
1. Usage - Commands                             *qfunleashed-commands*

                                *qfunleashed-Make* *:Make*
Make[!] [{filename}]            Start an asynchronous |:make| on the specified
                                buffer and fill the |quickfix| list. A
                                |'makeprg'| and an |'errorformat'| must be set
                                before running the command. {filename}
                                (optional) is the name of the file you wish to
                                make, appended to the |'makeprg'| if
                                necessary. |QuickFixCmdPre| and
                                |QuickFixCmdPost| should work as expected. If
                                a bang [!] modifier is added, the first error
                                is not jumped to. Special characters in the
                                command line (%, #, #n, ...) shall be
                                supported (|cmdline-special|).

                                *qfunleashed-Lmake* *:Lmake*
Lmake[!] [{filename}]           Works as |:Make| except that the
                                |location-list| is populated with errors
                                instead of the |quickfix| list

                                *qfunleashed-Grep* *:Grep*
Grep[!] [{options} {args}]      Start an asynchronous |:grep| on the specified
                                directory or file and fill the |quickfix| list
                                asynchronously. A |'grepprg'| and a
                                |'grepformat'| must be set before running the
                                command. {options} and {args} are specific
                                arguments that depends on your chosen
                                |'grepprg'| and must be given if necessary.
                                |QuickFixCmdPre| and |QuickFixCmdPost| should
                                work as expected. If a bang [!] modifier is
                                added, the first find is not jumped to. Special
                                characters in the command line (%, #, #n, ...)
                                shall be supported (|cmdline-special|).

                                *qfunleashed-GrepAdd* *:GrepAdd*
GrepAdd[!] [{filename}]         Works as |:Grep| except that items generated
                                by the job are appended to the current
                                |quickfix| list.

                                *qfunleashed-Lgrep* *:Lgrep*
Lgrep[!] [{options} {args}]     Works as |:Grep| except that the
                                |location-list| is populated with findings
                                instead of the |quickfix| list.

                                *qfunleashed-LgrepAdd* *:LgrepAdd*
LgrepAdd[!] [{filename}]        Works as |:Lgrep| except that items generated
                                by the job are appended to the current
                                |location-list|.

                                *qfunleashed-Find* *:Find*
Find[!] [{options} {args}]      Start an asynchronous find on the specified
                                directory and fill the |quickfix| list
                                asynchronously. A |g:qfunleashed_findprg| and a
                                |'grepformat'| must be set before running the
                                command. {options} and {args} are specific
                                arguments that depends on your chosen
                                |g:qfunleashed_findprg| and must be given if
                                necessary. |QuickFixCmdPre| and
                                |QuickFixCmdPost| should work as expected. If a
                                bang [!] modifier is added, the first find is
                                not jumped to. The plugin does define
                                findprg by default for unix like OS but not
                                Windows (help needed!).

                                *qfunleashed-Lfind* *:Lfind*
Lfind[!] [{options} {args}]     Works as |:Find| except that the |location-list| 
                                is filled instead of the |quickfix| list.

                                *qfunleashed-StopJob* *:StopJob*
StopJob [{arg}]                 The plugin supports double-job handling. You
                                can launch two asynchronous jobs, one filling the
                                |quickfix| list and the other filling the
                                |location-list|. |StopJob| provides a granular
                                control over the submitted jobs. If {arg} is
                                not provided, all the running jobs will be
                                stopped.

                                {arg} must be a word of the following list:
                                "quickfix", "location" or "all". Each word
                                stop the job which operates on the respective
                                list-name. "all" operates as if there were no
                                arguments given. As those words are long to
                                type, completion for those words is provided.

============================================================================
2. Configuration                                *qfunleashed-configuration*

                                *qfunleashed-g:qfunleashed_quick_open* 
                                *g:qfunleashed_quick_open*
g:qfunleashed_quick_open        If this global value is set to 1 (Default 0)
                                in your |init.vim| or |init.lua|, then the
                                quickfix list (respectively, the location list
                                if a local asynchronous job was launched) is
                                opened at the end of the asynchronous job. If
                                the latter opening is useless because the lists
                                are empty, they are closed or kept closed. In
                                other words, the lists are automatically
                                managed.

                                *qfunleashed-g:qfunleashed_quick_window* 
                                *g:qfunleashed_quick_window*
g:qfunleashed_quick_window      If this global value is set to 1 (Default 0)
                                in your |init.vim| or |init.lua|, then while a
                                job is running a window showing the output will
                                be opened at the top.

                                *qfunleashed-g:qfunleashed_findprg* 
                                *g:qfunleashed_findprg*
g:qfunleashed_findprg           This global value set the findprg used 
                                to fill the quickfix list. Be careful about the
                                output, so that the items are detected
                                properly. One useful way is to pipe the command
                                through a format format option or command so
                                that the |grepformat| can be used. See default
                                findprgs set in plugin/qfunleashed.lua for
                                examples.

============================================================================
3. About the plugin                             *qfunleashed-about*

The plugin is at an early stage, if you encounter an issue (this is more likely
to happen), feel free to open it at
https://github.com/lmenou/qfunleashed.nvim/issues. Otherwise, pull requests are
more than welcome as well at https://github.com/lmenou/qfunleashed.nvim/pulls.

Philosophy of the plugin: This plugin aims at being as minimal as possible. It
does not (and so far will not) provide embedded linting in the buffer but
rather use vim and neovim core functionalities to populate the (location or
quickfix) with an opinionated and not frustrating better way.

Besides, there is no need to compete with other amazing plugins such as
syntastic: https://github.com/vim-syntastic/syntastic, ALE:
https://github.com/dense-analysis/ale or nvim-lint:
https://github.com/mfussenegger/nvim-lint.

Thanks for testing/using this plugin.

  vim:tw=79:ts=8:ft=help:norl:
